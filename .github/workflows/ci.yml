name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Build & Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ?? Voeg hier je bestaande Fase-2 build/test stappen toe.
      # Voorbeeld placeholders (verwijder/aanpassen aan je stack):
      - name: Set up Node (voor web)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            services/web/package-lock.json
      - name: Web - install & test
        working-directory: services/web
        run: |
          npm ci
          npm test --silent || true   # pas aan / verwijder indien niet van toepassing

      - name: API/ingestion - placeholder tests
        run: |
          echo "Voer hier je API/ingestion tests uit (bv. go test, pytest, mvn test, ...)"

  build-and-push:
    name: Docker Build & Push (GHCR)
    needs: [tests]           # laat dit staan als je tests gating wil
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write        # nodig om naar GHCR te pushen
    strategy:
      fail-fast: false
      matrix:
        service: [api, ingestion, web]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve org (lowercase, GHCR vereist)
        id: org
        run: echo "org=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.org.outputs.org }}/vamolt-${{ matrix.service }}
          tags: |
            # :latest alleen op main
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            # :<git-sha> (short) altijd
            type=sha,format=short
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and (conditionally) push
        uses: docker/build-push-action@v6
        with:
          context: ./services/${{ matrix.service }}
          file: ./services/${{ matrix.service }}/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}        # PRs: build-only; main: push
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image tags
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "Pushed tags: ${{ steps.meta.outputs.tags }}"